article , comments

employee
    _id
    name - String
    email - string - validation
    createdAt - date, default Date.now()

User 
    _id
    name - String
    email - String - required - validation
    number - String - length -10, number
    createdAt - date, default Date.now()

article 
    _id
    Header - String - required
    Body - String - required
    employee - Schema.Types.ObjectId 
    createdAt - date, default Date.now()
    comment - since a noSQL data base 
        [{},{}]

Comment 
    _id
    body - String
    article - Schema.Types.ObjectId
    User - Schema.Types.ObjectId
    createdAt - date, default Date.now()

product, review

User
    _id
    name - String   
    email - String
    createdAt - date, Date.now()

Product
    _id
    name - String
    /price 
    /description
    createdAt - date, Date.now()
    review[
        {
            _id
            User - Schema.Type.ObjectId
            body -String - required
            /rating
            /product
            createdAt - date, Date.now()
        }
    ]

user, reviews

User
    _id
    name - String   
    email - String
    /password
    createdAt - date, Date.now()

review
        _id
        User - Schema.Type.ObjectId
        body -String - required
        /rating
        /product
        createdAt - date, Date.now()
    
category, product

Category 
    _id
    name -
    createdAt

Product 
    _id
    name
    description
    rating
    category
    createdAt

user adds a product to cart 
User
    _id
    name - String   
    email - String
    /password
    createdAt - date, Date.now()

cartLineItem
    _id
    cartItems
    User
    Quantity

user,address
User
    _id
    name - String   
    email - String
    /password
    createdAt - date, Date.now()

Address
    _id
    User
    Street
    City 
    State
    pinCode
    landMark
    type

user, order
User
    _id
    name - String   
    email - String
    /password
    createdAt - date, Date.now()

Order
    _id
    orderNo
    orderDate
    orderItems = [{
        product, price:quantity
    }]
    Price
    estimatedTime
